name: $(Year:yyyy).$(Month).$(DayOfMonth).$(Rev:r)

pool:
  vmImage: 'windows-latest'

trigger:
  tags:
    include:
      - v*

steps:

  - task: NuGetCommand@2
    displayName: Restore NuGet
    inputs:
      command: 'restore'
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'

  - task: VSBuild@1
    displayName: Build Solution
    inputs:
      solution: '**\*.sln'
      configuration: 'release'

  - task: VSTest@2
    displayName: Execute Unit Tests
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: 'src/CloudAwesome.Markdown/CloudAwesome.MarkdownMaker.Tests\bin\Release\CloudAwesome.MarkdownMaker.Tests.dll'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      testFiltercriteria: 'Category!=IgnoreInPipeline'
      codeCoverageEnabled: true
      testRunTitle: '$(Build.BuildNumber)'

  - task: NuGetCommand@2
    displayName: Nuget Pack
    inputs:
      command: 'pack'
      packagesToPack: '**/CloudAwesome.MarkdownMaker.csproj'
      configuration: 'release'
      versioningScheme: 'byBuildNumber'

  - task: GitHubRelease@1
    displayName: Create GitHub Release with ChangeLog
    inputs:
      gitHubConnection: 'GitHubReleaseConnection'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(Build.BuildNumber)'
      title: '$(Build.BuildNumber)'
      releaseNotesSource: 'inline'
      #assets: $(Build.ArtifactStagingDirectory)/*
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'issueBased'
      changeLogLabels: '[{ "label" : "enhancement", "displayName" : "New features", "state" : "closed" }, { "label" : "bug", "displayName" : "Bugs fixed", "state" : "closed" }, { "label" : "documentation", "displayName" : "Documentation added", "state" : "closed" }]'

  - task: NuGetCommand@2
    displayName: Nuget Push
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'markdown-maker'